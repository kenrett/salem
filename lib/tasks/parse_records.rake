require 'csv'

namespace:db do
  desc "Pass a CSV of records to create respective entries in the database"
  task :parse_records, [:filename] => :environment do |t, args|
    CSV.foreach(args.filename, headers: true, header_converters: :symbol) do |row|
      print "+"
        # binding.pry
        x = Record.new(
          provider_id: row[:provider_id],
          provider_name: row[:provider_name],
          provider_fye: row[:provider_fye],
          report_type: row[:report_type],
          report_num: row[:report_num],
          paid_from: row[:paid_from],
          paid_to: row[:paid_to],
          report_run_date: row[:report_run_date],
          service_period_num: row[:service_period_num],
          service_period_from: row[:service_period_from],
          service_period_thru: row[:service_period_thru],
          service_from: row[:service_from],
          service_thru: row[:service_thru],
          patient_name: row[:patient_name],
          patient_control_num: row[:patient_control_num],
          med_record_num: row[:med_record_num],
          hic_num: row[:hic_num],
          receipt_date: row[:receipt_date],
          paid_date: row[:paid_date],
          dcn: row[:dcn],
          bill_freq: row[:bill_freq],
          trans_type: row[:trans_type],
          pricer_rtn_cd: row[:pricer_rtn_cd],
          processor_id: row[:processor_id],
          zip_code: row[:zip_code],
          esrd_condition_code: row[:esrd_condition_code],
          weight: row[:weight],
          height: row[:height],
          birth_date: row[:birth_date],
          claim_num: row[:claim_num],
          rev_code: row[:rev_code],
          description: row[:description],
          hcpcs: row[:hcpcs],
          panel_code: row[:panel_code],
          trip_mile_ind: row[:trip_mile_ind],
          units: row[:units],
          charges: row[:charges],
          gross_fee_amt: row[:gross_fee_amt],
          gross_reimb: row[:gross_reimb],
          gapc: row[:gapc],
          outlier: row[:outlier],
          deductibles: row[:deductibles],
          cash_deduct: row[:cash_deduct],
          blood_deduct: row[:blood_deduct],
          coins: row[:coins],
          msp: row[:msp],
          med_days: row[:med_days],
          esrd_rdctn_ntwk_payments: row[:esrd_rdctn_ntwk_payments],
          msp_recon: row[:msp_recon],
          other_adjs: row[:other_adjs],
          line_item_reimb: row[:line_item_reimb],
          elected_coins: row[:elected_coins],
          mods: row[:mods],
          service_ind: row[:service_ind],
          pymt_ind: row[:pymt_ind],
          dscnt_fct: row[:dscnt_fct],
          tob_incl: row[:tob_incl],
          apc: row[:apc],
          undup_days: row[:undup_days],
          hours: row[:hours],
          gross_fee_reimb: row[:gross_fee_reimb],
          stndrd_ovrhd_amount: row[:stndrd_ovrhd_amount],
          tot_gross_fee_sched: row[:tot_gross_fee_sched],
          psr_report: row[:psr_report],
          net_reimb: row[:net_reimb],
          msp_cash_deduct: row[:msp_cash_deduct],
          msp_blood_deduct: row[:msp_blood_deduct],
          msp_deductibles: row[:msp_deductibles],
          msp_coins: row[:msp_coins],
          patient_cbsa: row[:patient_cbsa],
          claim_interest: row[:claim_interest],
          claim_report_splits: row[:claim_report_splits],
          low_volume: row[:low_volume],
          rebilling_adjustment: row[:rebilling_adjustment]
          )
        x.save!
        end
    end
end